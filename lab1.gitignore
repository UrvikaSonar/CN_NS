#Computer Networks
#Lab Assignment - 1
#Urvika Sonar - 131060

#Lan simulation
set ns [new Simulator]

#define colorfor data flows
$ns color 1 Blue
$ns color 2 Red
$ns color 3 Green

#open tracefiles
set tracefile1 [ open out.tr w ]
set winfile [ open winfile w ]
$ns trace-all $tracefile1

#open namfile
set namfile [ open out.nam w ]
$ns namtrace-all $namfile

#finish process
proc finish {} \
{
global ns tracefile1 namfile
$ns flush-trace
close $tracefile1
close $namfile
exec nam out.nam &
exit 0
}

#create eleven nodes
set n0 [ $ns node ]
set n1 [ $ns node ]
set n2 [ $ns node ]
set n3 [ $ns node ]
set n4 [ $ns node ]
set n5 [ $ns node ]
set n6 [ $ns node ]
set n7 [ $ns node ]
set n8 [ $ns node ]
set n9 [ $ns node ]
set n10 [$ns node ]

$n1 color Red
$n1 shape box
$n2 color Blue
$n2 shape box
$n8 color Green
$n8 shape box

#create links between the nodes
$ns duplex-link $n0 $n1 2Mb 10ms DropTail
$ns duplex-link $n1 $n2 2Mb 10ms DropTail
$ns duplex-link $n2 $n3 2Mb 10ms DropTail
$ns duplex-link $n0 $n3 2Mb 10ms DropTail
set lan [ $ns newLan " $n2 $n9 $n4 " 0.5Mb 40ms LL Queue/DropTail MAC/Csma/Cd Channel ]
$ns duplex-link $n4 $n5 2Mb 10ms DropTail
$ns duplex-link $n4 $n6 2Mb 10ms DropTail
$ns duplex-link $n5 $n6 2Mb 10ms DropTail

$ns duplex-link $n6 $n8 2Mb 10ms DropTail
$ns duplex-link $n6 $n7 2Mb 10ms DropTail
$ns duplex-link $n9 $n10 2Mb 10ms DropTail

#Give node position
$ns duplex-link-op $n0 $n1 orient down
$ns duplex-link-op $n1 $n2 orient right
$ns duplex-link-op $n2 $n3 orient up
$ns duplex-link-op $n0 $n3 orient right

$ns duplex-link-op $n4 $n5 orient up-right
$ns duplex-link-op $n4 $n6 orient right-down
$ns duplex-link-op $n5 $n6 orient down

$ns duplex-link-op $n6 $n8 orient right-up
$ns duplex-link-op $n6 $n7 orient right-down
$ns duplex-link-op $n9 $n10 orient right-down

#set queue size of link
$ns queue-limit $n1 $n2 20
$ns queue-limit $n2 $n3 20
$ns queue-limit $n6 $n8 20

#setup TCP connection
set tcp [ new Agent/TCP/Newreno ]
$ns attach-agent $n2 $tcp
set sink [ new Agent/TCPSink/DelAck ]
$ns attach-agent $n7 $sink
$ns connect $tcp $sink
$tcp set fid_ 1
$tcp set packet_size_ 1000

#setup ftp over tcp connection
set ftp [ new Application/FTP ]
$ftp attach-agent $tcp

#setup a UDP connection
set udp [ new Agent/UDP]
$ns attach-agent $n1 $udp
set null [ new Agent/Null ]
$ns attach-agent $n10 $null
$ns connect $udp $null
$udp set fid_ 2

#setup a CBR over UDP connection
set cbr [new Application/Traffic/CBR]
$cbr attach-agent $udp
$cbr set type_ CBR
$cbr set packet_size_ 1000
$cbr set rate 0.01Mb
$cbr set random false

#setup a UDP connection
set udp2 [ new Agent/UDP]
$ns attach-agent $n8 $udp2
set null [ new Agent/Null ]
$ns attach-agent $n0 $null
$ns connect $udp2 $null
$udp2 set fid_ 3

#setup a CBR over UDP connection
set cbr2 [new Application/Traffic/CBR]
$cbr2 attach-agent $udp2
$cbr2 set type_ CBR
$cbr2 set packet_size_ 1000
$cbr2 set rate 0.01Mb
$cbr2 set random false


#scheduling the events
$ns at 10.0 "$cbr start"
$ns at 20.0 "$ftp start"
$ns at 30.0 "$cbr2 start"
$ns at 100.0 "$cbr2 stop"
$ns at 110.0 "$ftp stop"
$ns at 120.0 "$cbr stop"

proc plotWindow {tcpSource file} \
{
global ns
set time 0.1 
set now [$ns now]
set cwnd1 [$tcpSource set cwnd_]
puts $file "$now $cwnd1"
$ns at [ expr $now+$time ] "plotWindow $tcpSource $file"
}

$ns at 0.1 " plotWindow $tcp $winfile "
$ns at 125.0 "finish"
$ns run

